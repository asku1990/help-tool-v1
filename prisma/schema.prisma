// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  REGULAR
  GUEST
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userType     UserType @default(REGULAR)

  // Relations
  vehicles     Vehicle[]
}

enum ExpenseCategory {
  FUEL
  MAINTENANCE
  INSURANCE
  TAX
  PARKING
  TOLL
  OTHER
}

model Vehicle {
  id        String   @id @default(uuid())
  userId    String
  name      String
  make      String?
  model     String?
  year      Int?
  licensePlate             String?  @db.VarChar(16)
  inspectionDueDate        DateTime?
  inspectionIntervalMonths Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fillUps   FuelFillUp[]
  expenses  Expense[]

  @@index([userId])
  @@index([userId, licensePlate])
}

model FuelFillUp {
  id             String   @id @default(uuid())
  vehicleId      String
  date           DateTime @default(now())
  odometerKm     Int
  liters         Decimal   @db.Decimal(10, 2)
  pricePerLiter  Decimal   @db.Decimal(10, 3)
  totalCost      Decimal   @db.Decimal(10, 2)
  isFull         Boolean   @default(true)
  notes          String?

  vehicle        Vehicle   @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  @@index([vehicleId, date])
}

model Expense {
  id         String   @id @default(uuid())
  vehicleId  String
  date       DateTime @default(now())
  category   ExpenseCategory
  amount     Decimal  @db.Decimal(10, 2)
  vendor     String?
  odometerKm Int?
  notes      String?

  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade)

  @@index([vehicleId, date])
}
